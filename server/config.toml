# jwt configuration
[jwt]
signing-key = "zilanlann"
expires-time = "7d"
buffer-time = "1d"
issuer = "zilanlann"

# zap logger configuration
[zap]
level = "info"
format = "console"
prefix = "[github.com/zilanlann/acmer-manage-system/server]"
director = "log"
show-line = true
encode-level = "LowercaseColorLevelEncoder"
stacktrace-key = "stacktrace"
log-in-console = true

# captcha configuration
[captcha]
key-long = 6
img-width = 240
img-height = 80
open-captcha = 0            # 0代表一直开启，大于0代表限制次数
open-captcha-timeout = 3600 # open-captcha大于0时才生

# mysql connect configuration
[mysql]
path = "localhost"
port = "3306"
config = ""
db-name = "acmer"
username = "root"
password = "X*TnVEzbKMwHLJ3"
max-idle-conns = 10
max-open-conns = 100
log-mode = ""
log-zap = false

# cors configuration
# 需要配合 server/initialize/router.go -> `Router.Use(middleware.CorsByRules())` 使用
# [cors]
# mode = "strict-whitelist" # 放行模式: allow-all, 放行全部; whitelist, 白名单模式, 来自白名单内域名的请求添加 cors 头; strict-whitelist 严格白名单模式, 白名单外的请求一律拒绝

# [[cors.whitelist]]
# allow-origin = "example1.com"
# allow-headers = "Content-Type,AccessToken,X-CSRF-Token, Authorization, Token,X-Token,X-User-Id"
# allow-methods = "POST, GET"
# expose-headers = "Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type"
# allow-credentials = true                                                                                   # 布尔值

# [[cors.whitelist]]
# allow-origin = "example2.com"
# allow-headers = "content-type"
# allow-methods = "GET, POST"
# expose-headers = "Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type"
# allow-credentials = true                                                                                   # 布尔
